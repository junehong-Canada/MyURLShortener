# version: "3.8"
name: My-URL-Shortener

services:
  dynamodb-local:
    image: amazon/dynamodb-local
    container_name: dynamodb-local
    ports:
      - "8000:8000"
    command: "-jar DynamoDBLocal.jar -sharedDb"
    volumes:
      - dynamodb_data:/home/dynamodblocal/data

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]

  postgresql:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    volumes:
      - postgres_data:/var/lib/postgresql/data

  cassandra:
    image: cassandra:latest
    container_name: cassandra
    ports:
      - "9042:9042"
    environment:
      CASSANDRA_CLUSTER_NAME: "TestCluster"
      CASSANDRA_SEEDS: "127.0.0.1"
      CASSANDRA_START_RPC: "true"
    volumes:
      - cassandra_data:/var/lib/cassandra

volumes:
  dynamodb_data:
  mongodb_data:
  postgres_data:
  cassandra_data:

# Start the Containers:
# docker-compose up -d
#
# Verify the Containers:
# docker ps
#
# Access Services:
# • DynamoDB Local: http://localhost:8000 for APIs.
# • MongoDB: Connect via mongodb://localhost:27017.
# • Redis: Connect via redis://localhost:6379.
# • PostgreSQL: Connect via postgresql://admin:password@localhost:5432/mydb.
#
# Stop Containers:
# docker-compose down
